module niveles (
    input wire clk,               // Señal de reloj
    input wire alimentar,         // Botón para alimentar
    input wire jugar,             // Botón para jugar
    input wire reset,             // Botón de reset
    input wire test,              // Botón de test
    input wire minuto,            // Señal que indica que ha pasado 1 minuto
    output reg [2:0] nivel_hambre,  // Nivel de hambre (1 a 5)
    output reg [2:0] nivel_diversion, // Nivel de diversión (1 a 5)
    output reg reset_debounced,   // Señal de reset después del antirrebote
    output reg test_debounced     // Señal de test después del antirrebote
);

// Definiciones para antirrebote
reg alimentar_prev, jugar_prev, reset_prev, test_prev;

// Lógica de antirrebote para los botones (alimentar, jugar, reset, test)
always @(posedge clk) begin
    // Detectar flanco ascendente de los botones para alimentar y jugar
    alimentar_prev <= alimentar;
    jugar_prev <= jugar;
    reset_prev <= reset;
    test_prev <= test;
    
    // Aplicar antirrebote a la señal de reset y test
    if (reset && !reset_prev) begin
        reset_debounced <= 1;
    end else begin
        reset_debounced <= 0;
    end

    if (test && !test_prev) begin
        test_debounced <= 1;
    end else begin
        test_debounced <= 0;
    end
end

// Inicialización de los niveles
initial begin
    nivel_hambre = 3'd1;      // Nivel inicial de hambre
    nivel_diversion = 3'd5;   // Nivel inicial de diversión
end

// Lógica secuencial para ajustar los niveles de hambre y diversión
always @(posedge clk) begin
    // Si se presiona reset, reiniciar los niveles
    if (reset_debounced) begin
        nivel_hambre <= 3'd1;
        nivel_diversion <= 3'd5;
    end else begin
        // Alimentar al Tamagotchi si se presiona el botón alimentar
        if (alimentar && !alimentar_prev && nivel_hambre > 1) begin
            nivel_hambre <= nivel_hambre - 1;  // Bajar nivel de hambre
        end

        // Jugar con el Tamagotchi si se presiona el botón jugar
        if (jugar && !jugar_prev && nivel_diversion < 5) begin
            nivel_diversion <= nivel_diversion + 1;  // Subir nivel de diversión
        end

        // Cada vez que pasa un minuto, ajustar niveles
        if (minuto) begin
            // Subir el nivel de hambre cada minuto (hasta 5)
            if (nivel_hambre < 5) begin
                nivel_hambre <= nivel_hambre + 1;
            end

            // Bajar el nivel de diversión cada minuto (hasta 1)
            if (nivel_diversion > 1) begin
                nivel_diversion <= nivel_diversion - 1;
            end
        end
    end
end

endmodule
